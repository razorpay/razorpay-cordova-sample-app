import { __decorate } from "tslib";
import { Directive } from '@angular/core';
import { ProxyCmp, proxyOutputs } from '../angular-component-lib/utils';
import * as i0 from "@angular/core";
import * as i1 from "../../providers/angular-delegate";
let NavDelegate = class NavDelegate {
    constructor(ref, resolver, injector, angularDelegate, location) {
        this.el = ref.nativeElement;
        ref.nativeElement.delegate = angularDelegate.create(resolver, injector, location);
        proxyOutputs(this, this.el, ['ionNavDidChange', 'ionNavWillChange']);
    }
};
/** @nocollapse */ NavDelegate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: NavDelegate, deps: [{ token: i0.ElementRef }, { token: i0.ComponentFactoryResolver }, { token: i0.Injector }, { token: i1.AngularDelegate }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ NavDelegate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.10", type: NavDelegate, selector: "ion-nav", ngImport: i0 });
NavDelegate = __decorate([
    ProxyCmp({
        inputs: ['animated', 'animation', 'root', 'rootParams', 'swipeGesture'],
        methods: [
            'push',
            'insert',
            'insertPages',
            'pop',
            'popTo',
            'popToRoot',
            'removeIndex',
            'setRoot',
            'setPages',
            'getActive',
            'getByIndex',
            'canGoBack',
            'getPrevious',
        ],
    })
], NavDelegate);
export { NavDelegate };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: NavDelegate, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ion-nav',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ComponentFactoryResolver }, { type: i0.Injector }, { type: i1.AngularDelegate }, { type: i0.ViewContainerRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LWRlbGVnYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2RpcmVjdGl2ZXMvbmF2aWdhdGlvbi9uYXYtZGVsZWdhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBb0UsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzVHLE9BQU8sRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7OztJQXdCM0QsV0FBVyxTQUFYLFdBQVc7SUFFdEIsWUFDRSxHQUFlLEVBQ2YsUUFBa0MsRUFDbEMsUUFBa0IsRUFDbEIsZUFBZ0MsRUFDaEMsUUFBMEI7UUFFMUIsSUFBSSxDQUFDLEVBQUUsR0FBRyxHQUFHLENBQUMsYUFBYSxDQUFDO1FBQzVCLEdBQUcsQ0FBQyxhQUFhLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNsRixZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7SUFDdkUsQ0FBQztDQUNGLENBQUE7NEhBYlksV0FBVztnSEFBWCxXQUFXO0FBQVgsV0FBVztJQXRCdkIsUUFBUSxDQUFDO1FBQ1IsTUFBTSxFQUFFLENBQUMsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLGNBQWMsQ0FBQztRQUN2RSxPQUFPLEVBQUU7WUFDUCxNQUFNO1lBQ04sUUFBUTtZQUNSLGFBQWE7WUFDYixLQUFLO1lBQ0wsT0FBTztZQUNQLFdBQVc7WUFDWCxhQUFhO1lBQ2IsU0FBUztZQUNULFVBQVU7WUFDVixXQUFXO1lBQ1gsWUFBWTtZQUNaLFdBQVc7WUFDWCxhQUFhO1NBQ2Q7S0FDRixDQUFDO0dBS1csV0FBVyxDQWF2QjtTQWJZLFdBQVc7NEZBQVgsV0FBVztrQkFKdkIsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsU0FBUztpQkFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEVsZW1lbnRSZWYsIEluamVjdG9yLCBWaWV3Q29udGFpbmVyUmVmLCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQW5ndWxhckRlbGVnYXRlIH0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL2FuZ3VsYXItZGVsZWdhdGUnO1xuaW1wb3J0IHsgUHJveHlDbXAsIHByb3h5T3V0cHV0cyB9IGZyb20gJy4uL2FuZ3VsYXItY29tcG9uZW50LWxpYi91dGlscyc7XG5cbkBQcm94eUNtcCh7XG4gIGlucHV0czogWydhbmltYXRlZCcsICdhbmltYXRpb24nLCAncm9vdCcsICdyb290UGFyYW1zJywgJ3N3aXBlR2VzdHVyZSddLFxuICBtZXRob2RzOiBbXG4gICAgJ3B1c2gnLFxuICAgICdpbnNlcnQnLFxuICAgICdpbnNlcnRQYWdlcycsXG4gICAgJ3BvcCcsXG4gICAgJ3BvcFRvJyxcbiAgICAncG9wVG9Sb290JyxcbiAgICAncmVtb3ZlSW5kZXgnLFxuICAgICdzZXRSb290JyxcbiAgICAnc2V0UGFnZXMnLFxuICAgICdnZXRBY3RpdmUnLFxuICAgICdnZXRCeUluZGV4JyxcbiAgICAnY2FuR29CYWNrJyxcbiAgICAnZ2V0UHJldmlvdXMnLFxuICBdLFxufSlcbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ2lvbi1uYXYnLFxufSlcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvZGlyZWN0aXZlLWNsYXNzLXN1ZmZpeFxuZXhwb3J0IGNsYXNzIE5hdkRlbGVnYXRlIHtcbiAgcHJvdGVjdGVkIGVsOiBIVE1MRWxlbWVudDtcbiAgY29uc3RydWN0b3IoXG4gICAgcmVmOiBFbGVtZW50UmVmLFxuICAgIHJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gICAgaW5qZWN0b3I6IEluamVjdG9yLFxuICAgIGFuZ3VsYXJEZWxlZ2F0ZTogQW5ndWxhckRlbGVnYXRlLFxuICAgIGxvY2F0aW9uOiBWaWV3Q29udGFpbmVyUmVmXG4gICkge1xuICAgIHRoaXMuZWwgPSByZWYubmF0aXZlRWxlbWVudDtcbiAgICByZWYubmF0aXZlRWxlbWVudC5kZWxlZ2F0ZSA9IGFuZ3VsYXJEZWxlZ2F0ZS5jcmVhdGUocmVzb2x2ZXIsIGluamVjdG9yLCBsb2NhdGlvbik7XG4gICAgcHJveHlPdXRwdXRzKHRoaXMsIHRoaXMuZWwsIFsnaW9uTmF2RGlkQ2hhbmdlJywgJ2lvbk5hdldpbGxDaGFuZ2UnXSk7XG4gIH1cbn1cbiJdfQ==