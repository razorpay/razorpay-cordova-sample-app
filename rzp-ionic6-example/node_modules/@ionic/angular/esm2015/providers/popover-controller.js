import { Injectable, Optional } from '@angular/core';
import { popoverController } from '@ionic/core';
import { OverlayBaseController } from '../util/overlay';
import * as i0 from "@angular/core";
import * as i1 from "./angular-delegate";
import * as i2 from "../di/r3_injector";
export class PopoverController extends OverlayBaseController {
    constructor(angularDelegate, resolver, injector, 
    // TODO: FW-1641: Migrate to Angular's version once Angular 13 is dropped
    environmentInjector) {
        super(popoverController);
        this.angularDelegate = angularDelegate;
        this.resolver = resolver;
        this.injector = injector;
        this.environmentInjector = environmentInjector;
    }
    create(opts) {
        var _a;
        return super.create(Object.assign(Object.assign({}, opts), { delegate: this.angularDelegate.create((_a = this.resolver) !== null && _a !== void 0 ? _a : this.environmentInjector, this.injector) }));
    }
}
/** @nocollapse */ PopoverController.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: PopoverController, deps: [{ token: i1.AngularDelegate }, { token: i0.ComponentFactoryResolver }, { token: i0.Injector }, { token: i2.EnvironmentInjector, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ PopoverController.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: PopoverController });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: PopoverController, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.AngularDelegate }, { type: i0.ComponentFactoryResolver }, { type: i0.Injector }, { type: i2.EnvironmentInjector, decorators: [{
                    type: Optional
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9wb3BvdmVyLWNvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFzQyxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pGLE9BQU8sRUFBa0IsaUJBQWlCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHaEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saUJBQWlCLENBQUM7Ozs7QUFLeEQsTUFBTSxPQUFPLGlCQUFrQixTQUFRLHFCQUE0RDtJQUNqRyxZQUNVLGVBQWdDLEVBQ2hDLFFBQWtDLEVBQ2xDLFFBQWtCO0lBQzFCLHlFQUF5RTtJQUNyRCxtQkFBd0M7UUFFNUQsS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFOakIsb0JBQWUsR0FBZixlQUFlLENBQWlCO1FBQ2hDLGFBQVEsR0FBUixRQUFRLENBQTBCO1FBQ2xDLGFBQVEsR0FBUixRQUFRLENBQVU7UUFFTix3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO0lBRzlELENBQUM7SUFFRCxNQUFNLENBQUMsSUFBb0I7O1FBQ3pCLE9BQU8sS0FBSyxDQUFDLE1BQU0saUNBQ2QsSUFBSSxLQUNQLFFBQVEsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxNQUFBLElBQUksQ0FBQyxRQUFRLG1DQUFJLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQy9GLENBQUM7SUFDTCxDQUFDOztrSUFoQlUsaUJBQWlCO3NJQUFqQixpQkFBaUI7NEZBQWpCLGlCQUFpQjtrQkFEN0IsVUFBVTs7MEJBT04sUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgSW5qZWN0b3IsIEluamVjdGFibGUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb3BvdmVyT3B0aW9ucywgcG9wb3ZlckNvbnRyb2xsZXIgfSBmcm9tICdAaW9uaWMvY29yZSc7XG5cbmltcG9ydCB7IEVudmlyb25tZW50SW5qZWN0b3IgfSBmcm9tICcuLi9kaS9yM19pbmplY3Rvcic7XG5pbXBvcnQgeyBPdmVybGF5QmFzZUNvbnRyb2xsZXIgfSBmcm9tICcuLi91dGlsL292ZXJsYXknO1xuXG5pbXBvcnQgeyBBbmd1bGFyRGVsZWdhdGUgfSBmcm9tICcuL2FuZ3VsYXItZGVsZWdhdGUnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUG9wb3ZlckNvbnRyb2xsZXIgZXh0ZW5kcyBPdmVybGF5QmFzZUNvbnRyb2xsZXI8UG9wb3Zlck9wdGlvbnMsIEhUTUxJb25Qb3BvdmVyRWxlbWVudD4ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGFuZ3VsYXJEZWxlZ2F0ZTogQW5ndWxhckRlbGVnYXRlLFxuICAgIHByaXZhdGUgcmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixcbiAgICBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvcixcbiAgICAvLyBUT0RPOiBGVy0xNjQxOiBNaWdyYXRlIHRvIEFuZ3VsYXIncyB2ZXJzaW9uIG9uY2UgQW5ndWxhciAxMyBpcyBkcm9wcGVkXG4gICAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBlbnZpcm9ubWVudEluamVjdG9yOiBFbnZpcm9ubWVudEluamVjdG9yXG4gICkge1xuICAgIHN1cGVyKHBvcG92ZXJDb250cm9sbGVyKTtcbiAgfVxuXG4gIGNyZWF0ZShvcHRzOiBQb3BvdmVyT3B0aW9ucyk6IFByb21pc2U8SFRNTElvblBvcG92ZXJFbGVtZW50PiB7XG4gICAgcmV0dXJuIHN1cGVyLmNyZWF0ZSh7XG4gICAgICAuLi5vcHRzLFxuICAgICAgZGVsZWdhdGU6IHRoaXMuYW5ndWxhckRlbGVnYXRlLmNyZWF0ZSh0aGlzLnJlc29sdmVyID8/IHRoaXMuZW52aXJvbm1lbnRJbmplY3RvciwgdGhpcy5pbmplY3RvciksXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==